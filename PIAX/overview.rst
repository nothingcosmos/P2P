PIAX
###############################################################################

PIAXは、P2Pエージェントプラットフォーム。

Agentによる柔軟な拡張、マルチオーバレイネットワーク構成、
Generic Transportが特徴


階層構造
*******************************************************************************

大きく分けると3層

# agent
# ov
# transport

transportはまだちゃんとみてない。
PIAX3.0で、Generic Transportが実装されており、Generic Transportの説明資料を読むのがよいかも。

ovはオーバレイネットワーク。様々なアルゴリズムを実装しており、
PIAXは異なるオーバレイが混在できるのが特徴。

様々なDiscoverty方法を提供する。

agentはオーバレイネットワーク上で動作するagentプログラム。

agentの特徴として、2つ

#他のNodeに送付し、そのNode上でインスタンス化して実行できる。
#Nodeは複数のオーバレイネットワークを構成することが可能で、agentはNodeの構成するovをbindできる。

agentが実行できるqueryは、多くの場合ovの実装に依存した動作をするため、bindしてovの性質を選択できる。

agent
*******************************************************************************

ov
*******************************************************************************

ov上には、様々なオーバレイネットワークが実装されている。

クエリの動作は、オーバレイネットワークの性質に応じている。

# 完全一致探索:DHT, SkipGraph
# 部分一致探索:DHT+alpha
# 範囲探索    :Skip Graph, LL-Net
# 連想探索    :Unstructured
# 意味探索    :DHT+alpha


ディスカバリメッセージ


DDLL(Distributed Double Linked List) SkipGraph
===============================================================================

ディレクトリはわかれてるっぽい。

ddll

sg


DOLR(Distributed Object Location and Routing)
===============================================================================



ovs
===============================================================================

ovsディレクトリ内のクラスは、すべてOverlayクラスを継承している


alm ::

  アプリ層マルチキャスト

delunary ::

  delunary overlay

dht ::

  dhtなので、key-value storeを提供する

  putは、valueをmskip.forwardQuery()
  getは、get(id, key, replica_num)

  get_local()
  put_local()


dolr ::

flood ::

  simple flooding

llnet ::

  地理的範囲検索

mskip ::

  multi key skip graph ???

rangekey ::



transport
*******************************************************************************

Generic transport



ovの階層構造を整理する
===============================================================================




agent
===============================================================================

agentのhome peerは異なるovにbindできるところが興味深い。

agentからのqeuryはov依存の動作をするため、bindで切り替えれるのは便利に思える。



agentのclassを送付する仕組みはセキュリティ上問題ありすぎる。
security_policy等の組み合わせが必要かもしれない。
